@model IEnumerable<LexiconLMS.Models.Course>

@{
    ViewBag.Title = "Courses";
}
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="~/Scripts/jquery-3.1.1.js"></script>
</head>
@if (User.IsInRole("Teacher"))
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Courses")'>Courses Overview Page</a></li>
    </ol>
}
<h2>Courses</h2>
@if (TempData["Event"] != null)
{
    <div class="Event alert alert-success" id="Event">
        <h4>
            @TempData["Event"]
        </h4>
    </div>
    <script type="text/javascript">
    $('#Event').delay(4000).hide(1500);
    </script>
}

@if (TempData["NegativeEvent"] != null)
{
    <div class="TempData alert alert-danger" id="Full">
        <h4>
            @TempData["NegativeEvent"]
        </h4>
    </div>
}
<p>
    @Html.ActionLink("Add Course", "Create")
</p>
<div class="table-responsive">
    <table class="table table-bordered table-condensed table-striped table-hover sortable">
        <thead>
            <tr>
                <th data-defaultsign="AZ">
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th data-defaultsign="AZ">
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th data-defaultsort='disabled'>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th data-defaultsign="AZ">
                    Amount of Students
                </th>
                <th data-defaultsort='disabled'></th>
            </tr>
        </thead>
        @foreach (var item in Model.OrderBy(c => c.StartDate))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Students.Count)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Remove", "Delete", new { id = item.Id }) |
                    @Html.ActionLink("Modules", "Index", "Modules", new { courseId = item.Id }, null)
                </td>
            </tr>
        }

    </table>
    </div>