@model LexiconLMS.Models.Activity

@{
    ViewBag.Title = "Edit";
}
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
@if (User.IsInRole("Teacher"))
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Courses")'>Courses Overview Page</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Details","Courses",new {id=Model.Module.CourseId })'>@ViewBag.CourseName</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Modules",new {courseId=Model.Module.CourseId })'>Modules for @ViewBag.CourseName</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Details","Modules",new {id=Model.ModuleId })'>Details for Module @Html.Raw(Model.Module.Name)</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Edit","Activities",new {id=Model.Id })'>Edit Activity @Model.Name for Module @Html.Raw(Model.Module.Name)</a></li>
    </ol>
}
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Activity for Module @Model.Module.Name</h4>
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="form-group">
            <!-- @Html.LabelFor(model => model.ModuleId, htmlAttributes: new { @class = "control-label col-md-2" })-->
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ModuleId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ActivityTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActivityTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentUpload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.StudentUpload, "True", new { htmlAttributes = new { @class = "form-control" } }) True<br />
                @Html.RadioButtonFor(model => model.StudentUpload, "False", new { htmlAttributes = new { @class = "form-control" } }) False
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Module Details", "Details", "Modules", new { id = Model.ModuleId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
