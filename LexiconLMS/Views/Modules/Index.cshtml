@model IEnumerable<LexiconLMS.Models.Module>

@{
    ViewBag.Title = "Modules Index";
}
<head>
    <script src="~/Scripts/jquery-3.1.1.js"></script>
</head>
@if (User.IsInRole("Student"))
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href='@Url.Action("StudentHome","Courses")'>Course Home Page</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Modules",new { courseId = @ViewBag.CourseId })'>@ViewBag.CourseName Student Modules Page</a></li>
    </ol>
}
@if (User.IsInRole("Teacher"))
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Courses")'>Courses Overview Page</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Details","Courses",new {id=ViewBag.CourseId })'>@ViewBag.CourseName</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Modules",new {courseId=ViewBag.CourseId })'>Modules for @ViewBag.CourseName</a></li>
    </ol>
}
<h2>Modules for Course @ViewBag.CourseName</h2>
@if (TempData["Event"] != null)
{
    <div class="Event alert alert-success" id="Event">
        <h4>
            @TempData["Event"]
        </h4>
    </div>
    <script type="text/javascript">
    $('#Event').delay(4000).hide(1500);
    </script>
}

@if (TempData["NegativeEvent"] != null)
{
    <div class="TempData alert alert-danger" id="Full">
        <h4>
            @TempData["NegativeEvent"]
        </h4>
    </div>
}


@if(User.IsInRole("Teacher"))
{
<p>

    @Html.ActionLink("Add Module", "Create", new { courseId = @ViewBag.CourseId, courseName = @ViewBag.CourseName }) |
    @Html.ActionLink("Back to Course Details ", "Details", "Courses", new { id = @ViewBag.CourseId }, null)
</p>
}


@if (User.IsInRole("Student"))
{
    @Html.ActionLink("Back to your course page", "StudentHome", "Courses")
}

<table class="table table-bordered table-condensed table-striped table-hover sortable">
    <thead>
    <tr>
        <!--
        <th>
            @Html.DisplayNameFor(model => model.CourseId)
        </th>
        -->
             <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Name)
        </th>
            <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.StartDateTime)
        </th>
            <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.EndDateTime)
        </th>
            <th data-defaultsign="AZ">
            @Html.DisplayNameFor(model => model.Description)
        </th>
            <th data-defaultsort='disabled'></th>
    </tr>
    </thead>

        @foreach (var item in Model.OrderBy(c => c.StartDateTime))
        {
    <tr>
        <!--
        <td>
            @Html.HiddenFor(modelItem => item.CourseId)
        </td>
        -->
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
@if (User.IsInRole("Teacher"))
{
        <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id, courseName = @ViewBag.CourseName }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id, courseName = @ViewBag.CourseName }) |
                    @Html.ActionLink("Remove", "Delete", new { id = item.Id, courseName = @ViewBag.CourseName })
        </td>
}
@if (User.IsInRole("Student"))
{
    <td>
        @Html.ActionLink("Details", "Details", new { id = item.Id, courseName = @ViewBag.CourseName })
    </td>
}
    </tr>
}
   
</table>
@if (User.IsInRole("Teacher"))
{
<div>
    @Html.ActionLink("Back to Course Details ", "Details", "Courses", new { id = @ViewBag.CourseId }, null)
</div>
}



