@model LexiconLMS.Models.Module
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="~/Scripts/jquery-3.1.1.js"></script>
</head>
@{
    ViewBag.Title = "Module Details";
}
@if (User.IsInRole("Teacher"))
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Courses")'>Courses Overview Page</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Details","Courses",new {id=Model.CourseId })'>@ViewBag.CourseName</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Modules",new {courseId=Model.CourseId })'>Modules for @ViewBag.CourseName</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Details","Modules",new {courseId=ViewBag.CourseId })'>Activities for Module @Model.Name</a></li>
    </ol>
}

@if (User.IsInRole("Student"))
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href='@Url.Action("StudentHome","Courses")'>Course Home Page</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Index","Modules",new { courseId = Model.CourseId })'>@ViewBag.courseName Student Modules Page</a></li>
        <li class="breadcrumb-item active"><a href='@Url.Action("Details", "Modules",new {id=Model.Id})'>Module @Html.Raw(Model.Name)</a></li>
    </ol>
}
<h2>Module @Html.Raw(Model.Name) in Course @ViewBag.courseName</h2>

<div>
    <dl class="dl-horizontal">

        <dd>
            @Html.HiddenFor(model => model.CourseId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDateTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDateTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

    </dl>
</div>
@if (User.IsInRole("Teacher"))
{
    <p>
        @Html.ActionLink("Add Activity", "Create", "Activities", new { moduleId = Model.Id }, null) |
        @Html.ActionLink("Edit Module Info", "Edit", new { id = Model.Id, courseName = ViewBag.CourseName }) |
        @Html.ActionLink("Module List", "Index", new { courseId = Model.CourseId })
    </p>
} else
{
    <p>
        @Html.ActionLink("Module List", "Index", new { courseId = Model.CourseId })
    </p>
}
<hr>
@*file upload area for course*@
@if (User.IsInRole("Teacher"))
{
    using (Html.BeginForm("CreateModuleFile", "Files", new { moduleId = Model.Id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
       
       
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.Label("File upload at Module level.")
                    <input type="file" name="upload" />
                    <br />
                    @*</div>*@
                    @*<div class="form-group" >*@
                    @Html.Label("Description:")
                    &nbsp;
                    <input class="form-control input-sm" name="description" />
                    @*</div>*@
                    @*<div class="form-group">*@
                    <input type="submit" value="Upload" class="btn btn-default" />
                </div>
            </div>@*end of upload area div*@
            <div class="col-md-7">
                <h4>Uploaded files at module level:</h4>
                @Html.Action("ShowModuleFiles", "Files", new { moduleId = Model.Id })
            </div>@*end of row already uploaded files*@

        </div> @*end of row div*@
    }
}@* end of @using html.beginform *@
 
@if (User.IsInRole("Student")) //visa list över moduldokument för studenter
{
    <div class="row">
        <div class="col-xs-12">
            <h3>Module Documents</h3>
            <p>
                <!-- Table of course documents-->
                @Html.Action("ShowModuleFiles", "Files", new { moduleId = Model.Id })
            </p>
            <br />
        </div>
    </div>
}



<hr>
<h3>Activities</h3>

@if (TempData["Event"] != null)
{
    <div class="Event alert alert-success" id="Event">
        <h4>
            @TempData["Event"]
        </h4>
    </div>
    <script type="text/javascript">
        $('#Event').delay(4000).hide(1500);
    </script>
}
@if (TempData["NegativeEvent"] != null)
{
    <div class="TempData alert alert-danger" id="Full">
        <h4>
            @TempData["NegativeEvent"]
        </h4>
    </div>
}

@if (Model.Activities.Count > 0)
{
    var firstItem = Model.Activities.First();
    <div class="table-responsive">
        <table class="table table-bordered table-condensed table-striped table-hover sortable">
            <thead>
                <tr>
                    <th data-defaultsign="AZ">
                        <!-- @Html.DisplayNameFor(model => firstItem.Type) -->
                        Type
                    </th>
                    <th data-defaultsign="AZ">
                        @Html.DisplayNameFor(model => firstItem.Name)
                    </th>
                    <th data-defaultsign="AZ">
                        @Html.DisplayNameFor(model => firstItem.StartDateTime)
                    </th>
                    <th data-defaultsign="AZ">
                        @Html.DisplayNameFor(model => firstItem.EndDateTime)
                    </th>
                    <th data-defaultsign="AZ">
                        Files
                    </th>
                    @if (User.IsInRole("Teacher"))
                {
                        <th data-defaultsign="AZ">
                            Student Files
                        </th>
                    }
                    <!--
                    <th data-defaultsign="AZ">
                        @Html.DisplayNameFor(model => firstItem.Description)
                    </th>
                        -->
                    <th data-defaultsort='disabled'></th>
                </tr>
            </thead>

            @foreach (var item in Model.Activities.OrderBy(a => a.StartDateTime))
            {

                <tr title="@item.Description">
                    <td>
                        @Html.DisplayFor(modelItem => item.Type.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDateTime)
                    </td>
                    @{var countPublicFiles = item.Files.Where(f => f.PubliclyVisible == true).Count();
                        <td>@countPublicFiles </td>
                    }
                    @if (User.IsInRole("Teacher"))
                    {
                        var countPrivateFiles = item.Files.Where(f => f.PubliclyVisible == false).Count();
                        <td>@countPrivateFiles </td>
                    }
                    @if (User.IsInRole("Teacher"))
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", "Activities", new { id = item.Id }, null) |
                            @Html.ActionLink("Details", "Details", "Activities", new { id = item.Id }, null) |
                            @Html.ActionLink("Remove", "Delete", "Activities", new { id = item.Id }, null)
                        </td>
                    }
                    @if (User.IsInRole("Student"))
                    {
                        <td>
                            @Html.ActionLink("Details", "Details", "Activities", new { id = item.Id }, null)
                        </td>
                    }
                </tr>
                        }

        </table>
        </div>
        } else {
        <p>No activities have been added so far.</p>
        }
